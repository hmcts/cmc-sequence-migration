#!groovy
@Library("Infrastructure") _
import uk.gov.hmcts.contino.AppPipelineConfig

properties([
        parameters([
                choice(name: 'ENVIRONMENT', choices: 'sandbox', description: 'Environment where migration should be run'),
                choice(name: 'SUBSCRIPTION', choices: 'sandbox', description: 'Azure subscriptions available to build in'),
                choice(name: 'MIGRATION_SCRIPT_FILENAME', choices: 'claim-migration.sql\nlegal-rep-migration.sql', description: 'Name of migration script to execute')
        ])
])

def secretId = "cmc-" + params.ENVIRONMENT
def product = "cmc"
def component = "claim-store"

def secrets = [
        (secretId): [
                secret('cmc-db-password', 'CMC_DB_PASSWORD')
        ]
]

static Map<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

try {
    node {
        def config = new AppPipelineConfig()
        config.vaultSecrets = secrets

        def subscription = "${params.SUBSCRIPTION}"

        stage('Checkout') {
            deleteDir()
            checkout scm
        }

        env.CLAIM_STORE_DB_HOST = 'pettyfrance.postgres.database.azure.com'
        env.CLAIM_STORE_DB_PORT = '5432'
        env.CLAIM_STORE_DB_NAME = 'claimstore'
        env.CLAIM_STORE_DB_USERNAME = 'petadmin@pettyfrance'
        env.CLAIM_STORE_DB_PASSWORD = 'L%3_??MAN3p00l'

        env.CMC_DB_HOST = 'cmc-sandbox.postgres.database.azure.com'
        env.CMC_DB_USERNAME = 'cmc@cmc-sandbox'
        env.CMC_DB_PORT = '5432'
        env.CMC_DB_NAME = 'cmc'


        // run migration scripts in postgres container
        stage('Run migration scripts') {
            withSubscription(subscription) {
                withTeamSecrets(config, params.ENVIRONMENT) {
                    withDocker('jbergknoff/postgresql-client', "--entrypoint='' -e PGPASSWORD=${CMC_DB_PASSWORD} -v ${WORKSPACE}:/migration") {
                        sh "chmod +x /migration/migration.sh"
                        sh "/migration/migration.sh \
                            ${CMC_DB_HOST} \
                            ${CMC_DB_PORT} \
                            ${CMC_DB_NAME} \
                            ${CMC_DB_USERNAME} \
                            ${params.MIGRATION_SCRIPT_FILENAME} \
                            ${CLAIM_STORE_DB_NAME} \
                            ${CLAIM_STORE_DB_PORT} \
                            ${CLAIM_STORE_DB_HOST} \
                            ${CLAIM_STORE_DB_USERNAME} \
                            ${CLAIM_STORE_DB_PASSWORD}"
                    }
                }
            }
        }

        stage('Clean up') {
            deleteDir()
        }
    }
}
catch (err) {
    throw err
}

